{"ast":null,"code":"import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nvar PaginationService = /** @class */function () {\n  function PaginationService() {\n    this.change = new EventEmitter();\n    this.instances = {};\n    this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\n  }\n  PaginationService.prototype.defaultId = function () {\n    return this.DEFAULT_ID;\n  };\n  /**\r\n   * Register a PaginationInstance with this service. Returns a\r\n   * boolean value signifying whether the instance is new or\r\n   * updated (true = new or updated, false = unchanged).\r\n   */\n  PaginationService.prototype.register = function (instance) {\n    if (instance.id == null) {\n      instance.id = this.DEFAULT_ID;\n    }\n    if (!this.instances[instance.id]) {\n      this.instances[instance.id] = instance;\n      return true;\n    } else {\n      return this.updateInstance(instance);\n    }\n  };\n  /**\r\n   * Check each property of the instance and update any that have changed. Return\r\n   * true if any changes were made, else return false.\r\n   */\n  PaginationService.prototype.updateInstance = function (instance) {\n    var changed = false;\n    for (var prop in this.instances[instance.id]) {\n      if (instance[prop] !== this.instances[instance.id][prop]) {\n        this.instances[instance.id][prop] = instance[prop];\n        changed = true;\n      }\n    }\n    return changed;\n  };\n  /**\r\n   * Returns the current page number.\r\n   */\n  PaginationService.prototype.getCurrentPage = function (id) {\n    if (this.instances[id]) {\n      return this.instances[id].currentPage;\n    }\n  };\n  /**\r\n   * Sets the current page number.\r\n   */\n  PaginationService.prototype.setCurrentPage = function (id, page) {\n    if (this.instances[id]) {\n      var instance = this.instances[id];\n      var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\n      if (page <= maxPage && 1 <= page) {\n        this.instances[id].currentPage = page;\n        this.change.emit(id);\n      }\n    }\n  };\n  /**\r\n   * Sets the value of instance.totalItems\r\n   */\n  PaginationService.prototype.setTotalItems = function (id, totalItems) {\n    if (this.instances[id] && 0 <= totalItems) {\n      this.instances[id].totalItems = totalItems;\n      this.change.emit(id);\n    }\n  };\n  /**\r\n   * Sets the value of instance.itemsPerPage.\r\n   */\n  PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\n    if (this.instances[id]) {\n      this.instances[id].itemsPerPage = itemsPerPage;\n      this.change.emit(id);\n    }\n  };\n  /**\r\n   * Returns a clone of the pagination instance object matching the id. If no\r\n   * id specified, returns the instance corresponding to the default id.\r\n   */\n  PaginationService.prototype.getInstance = function (id) {\n    if (id === void 0) {\n      id = this.DEFAULT_ID;\n    }\n    if (this.instances[id]) {\n      return this.clone(this.instances[id]);\n    }\n    return {};\n  };\n  /**\r\n   * Perform a shallow clone of an object.\r\n   */\n  PaginationService.prototype.clone = function (obj) {\n    var target = {};\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        target[i] = obj[i];\n      }\n    }\n    return target;\n  };\n  return PaginationService;\n}();\nvar __decorate$1 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = undefined && undefined.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\nvar PaginatePipe = /** @class */function () {\n  function PaginatePipe(service) {\n    this.service = service;\n    // store the values from the last time the pipe was invoked\n    this.state = {};\n  }\n  PaginatePipe.prototype.transform = function (collection, args) {\n    // When an observable is passed through the AsyncPipe, it will output\n    // `null` until the subscription resolves. In this case, we want to\n    // use the cached data from the `state` object to prevent the NgFor\n    // from flashing empty until the real values arrive.\n    if (!(collection instanceof Array)) {\n      var _id = args.id || this.service.defaultId();\n      if (this.state[_id]) {\n        return this.state[_id].slice;\n      } else {\n        return collection;\n      }\n    }\n    var serverSideMode = args.totalItems && args.totalItems !== collection.length;\n    var instance = this.createInstance(collection, args);\n    var id = instance.id;\n    var start, end;\n    var perPage = instance.itemsPerPage;\n    var emitChange = this.service.register(instance);\n    if (!serverSideMode && collection instanceof Array) {\n      perPage = +perPage || LARGE_NUMBER;\n      start = (instance.currentPage - 1) * perPage;\n      end = start + perPage;\n      var isIdentical = this.stateIsIdentical(id, collection, start, end);\n      if (isIdentical) {\n        return this.state[id].slice;\n      } else {\n        var slice = collection.slice(start, end);\n        this.saveState(id, collection, slice, start, end);\n        this.service.change.emit(id);\n        return slice;\n      }\n    } else {\n      if (emitChange) {\n        this.service.change.emit(id);\n      }\n      // save the state for server-side collection to avoid null\n      // flash as new data loads.\n      this.saveState(id, collection, collection, start, end);\n      return collection;\n    }\n  };\n  /**\r\n   * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n   */\n  PaginatePipe.prototype.createInstance = function (collection, config) {\n    this.checkConfig(config);\n    return {\n      id: config.id != null ? config.id : this.service.defaultId(),\n      itemsPerPage: +config.itemsPerPage || 0,\n      currentPage: +config.currentPage || 1,\n      totalItems: +config.totalItems || collection.length\n    };\n  };\n  /**\r\n   * Ensure the argument passed to the filter contains the required properties.\r\n   */\n  PaginatePipe.prototype.checkConfig = function (config) {\n    var required = ['itemsPerPage', 'currentPage'];\n    var missing = required.filter(function (prop) {\n      return !(prop in config);\n    });\n    if (0 < missing.length) {\n      throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\n    }\n  };\n  /**\r\n   * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n   * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n   * need to check that the collection, start and end points are all identical, and if so, return the\r\n   * last sliced array.\r\n   */\n  PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\n    this.state[id] = {\n      collection: collection,\n      size: collection.length,\n      slice: slice,\n      start: start,\n      end: end\n    };\n  };\n  /**\r\n   * For a given id, returns true if the collection, size, start and end values are identical.\r\n   */\n  PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\n    var state = this.state[id];\n    if (!state) {\n      return false;\n    }\n    var isMetaDataIdentical = state.size === collection.length && state.start === start && state.end === end;\n    if (!isMetaDataIdentical) {\n      return false;\n    }\n    return state.slice.every(function (element, index) {\n      return element === collection[start + index];\n    });\n  };\n  PaginatePipe = __decorate$1([Pipe({\n    name: 'paginate',\n    pure: false\n  }), __metadata(\"design:paramtypes\", [PaginationService])], PaginatePipe);\n  return PaginatePipe;\n}();\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\nvar __decorate$2 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = undefined && undefined.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nfunction coerceToBoolean(input) {\n  return !!input && input !== 'false';\n}\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\nvar PaginationControlsComponent = /** @class */function () {\n  function PaginationControlsComponent() {\n    this.maxSize = 7;\n    this.previousLabel = 'Previous';\n    this.nextLabel = 'Next';\n    this.screenReaderPaginationLabel = 'Pagination';\n    this.screenReaderPageLabel = 'page';\n    this.screenReaderCurrentLabel = \"You're on page\";\n    this.pageChange = new EventEmitter();\n    this.pageBoundsCorrection = new EventEmitter();\n    this._directionLinks = true;\n    this._autoHide = false;\n    this._responsive = false;\n  }\n  Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\n    get: function () {\n      return this._directionLinks;\n    },\n    set: function (value) {\n      this._directionLinks = coerceToBoolean(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\n    get: function () {\n      return this._autoHide;\n    },\n    set: function (value) {\n      this._autoHide = coerceToBoolean(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\n    get: function () {\n      return this._responsive;\n    },\n    set: function (value) {\n      this._responsive = coerceToBoolean(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PaginationControlsComponent.prototype.trackByIndex = function (index) {\n    return index;\n  };\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"id\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", Number)], PaginationControlsComponent.prototype, \"maxSize\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", Boolean), __metadata$1(\"design:paramtypes\", [Boolean])], PaginationControlsComponent.prototype, \"directionLinks\", null);\n  __decorate$2([Input(), __metadata$1(\"design:type\", Boolean), __metadata$1(\"design:paramtypes\", [Boolean])], PaginationControlsComponent.prototype, \"autoHide\", null);\n  __decorate$2([Input(), __metadata$1(\"design:type\", Boolean), __metadata$1(\"design:paramtypes\", [Boolean])], PaginationControlsComponent.prototype, \"responsive\", null);\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\n  __decorate$2([Input(), __metadata$1(\"design:type\", String)], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\n  __decorate$2([Output(), __metadata$1(\"design:type\", EventEmitter)], PaginationControlsComponent.prototype, \"pageChange\", void 0);\n  __decorate$2([Output(), __metadata$1(\"design:type\", EventEmitter)], PaginationControlsComponent.prototype, \"pageBoundsCorrection\", void 0);\n  PaginationControlsComponent = __decorate$2([Component({\n    selector: 'pagination-controls',\n    template: DEFAULT_TEMPLATE,\n    styles: [DEFAULT_STYLES],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n  })], PaginationControlsComponent);\n  return PaginationControlsComponent;\n}();\nvar __decorate$3 = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = undefined && undefined.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\nvar PaginationControlsDirective = /** @class */function () {\n  function PaginationControlsDirective(service, changeDetectorRef) {\n    var _this = this;\n    this.service = service;\n    this.changeDetectorRef = changeDetectorRef;\n    this.maxSize = 7;\n    this.pageChange = new EventEmitter();\n    this.pageBoundsCorrection = new EventEmitter();\n    this.pages = [];\n    this.changeSub = this.service.change.subscribe(function (id) {\n      if (_this.id === id) {\n        _this.updatePageLinks();\n        _this.changeDetectorRef.markForCheck();\n        _this.changeDetectorRef.detectChanges();\n      }\n    });\n  }\n  PaginationControlsDirective.prototype.ngOnInit = function () {\n    if (this.id === undefined) {\n      this.id = this.service.defaultId();\n    }\n    this.updatePageLinks();\n  };\n  PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\n    this.updatePageLinks();\n  };\n  PaginationControlsDirective.prototype.ngOnDestroy = function () {\n    this.changeSub.unsubscribe();\n  };\n  /**\r\n   * Go to the previous page\r\n   */\n  PaginationControlsDirective.prototype.previous = function () {\n    this.checkValidId();\n    this.setCurrent(this.getCurrent() - 1);\n  };\n  /**\r\n   * Go to the next page\r\n   */\n  PaginationControlsDirective.prototype.next = function () {\n    this.checkValidId();\n    this.setCurrent(this.getCurrent() + 1);\n  };\n  /**\r\n   * Returns true if current page is first page\r\n   */\n  PaginationControlsDirective.prototype.isFirstPage = function () {\n    return this.getCurrent() === 1;\n  };\n  /**\r\n   * Returns true if current page is last page\r\n   */\n  PaginationControlsDirective.prototype.isLastPage = function () {\n    return this.getLastPage() === this.getCurrent();\n  };\n  /**\r\n   * Set the current page number.\r\n   */\n  PaginationControlsDirective.prototype.setCurrent = function (page) {\n    this.pageChange.emit(page);\n  };\n  /**\r\n   * Get the current page number.\r\n   */\n  PaginationControlsDirective.prototype.getCurrent = function () {\n    return this.service.getCurrentPage(this.id);\n  };\n  /**\r\n   * Returns the last page number\r\n   */\n  PaginationControlsDirective.prototype.getLastPage = function () {\n    var inst = this.service.getInstance(this.id);\n    if (inst.totalItems < 1) {\n      // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\n      // but it makes sense to consider a single, empty page as the last page.\n      return 1;\n    }\n    return Math.ceil(inst.totalItems / inst.itemsPerPage);\n  };\n  PaginationControlsDirective.prototype.getTotalItems = function () {\n    return this.service.getInstance(this.id).totalItems;\n  };\n  PaginationControlsDirective.prototype.checkValidId = function () {\n    if (this.service.getInstance(this.id).id == null) {\n      console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\n    }\n  };\n  /**\r\n   * Updates the page links and checks that the current page is valid. Should run whenever the\r\n   * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n   * input values changes.\r\n   */\n  PaginationControlsDirective.prototype.updatePageLinks = function () {\n    var _this = this;\n    var inst = this.service.getInstance(this.id);\n    var correctedCurrentPage = this.outOfBoundCorrection(inst);\n    if (correctedCurrentPage !== inst.currentPage) {\n      setTimeout(function () {\n        _this.pageBoundsCorrection.emit(correctedCurrentPage);\n        _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\n      });\n    } else {\n      this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\n    }\n  };\n  /**\r\n   * Checks that the instance.currentPage property is within bounds for the current page range.\r\n   * If not, return a correct value for currentPage, or the current value if OK.\r\n   */\n  PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\n    var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\n    if (totalPages < instance.currentPage && 0 < totalPages) {\n      return totalPages;\n    } else if (instance.currentPage < 1) {\n      return 1;\n    }\n    return instance.currentPage;\n  };\n  /**\r\n   * Returns an array of Page objects to use in the pagination controls.\r\n   */\n  PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\n    // paginationRange could be a string if passed from attribute, so cast to number.\n    paginationRange = +paginationRange;\n    var pages = [];\n    // Return 1 as default page number\n    // Make sense to show 1 instead of empty when there are no items\n    var totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\n    var halfWay = Math.ceil(paginationRange / 2);\n    var isStart = currentPage <= halfWay;\n    var isEnd = totalPages - halfWay < currentPage;\n    var isMiddle = !isStart && !isEnd;\n    var ellipsesNeeded = paginationRange < totalPages;\n    var i = 1;\n    while (i <= totalPages && i <= paginationRange) {\n      var label = void 0;\n      var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\n      var openingEllipsesNeeded = i === 2 && (isMiddle || isEnd);\n      var closingEllipsesNeeded = i === paginationRange - 1 && (isMiddle || isStart);\n      if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\n        label = '...';\n      } else {\n        label = pageNumber;\n      }\n      pages.push({\n        label: label,\n        value: pageNumber\n      });\n      i++;\n    }\n    return pages;\n  };\n  /**\r\n   * Given the position in the sequence of pagination links [i],\r\n   * figure out what page number corresponds to that position.\r\n   */\n  PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\n    var halfWay = Math.ceil(paginationRange / 2);\n    if (i === paginationRange) {\n      return totalPages;\n    } else if (i === 1) {\n      return i;\n    } else if (paginationRange < totalPages) {\n      if (totalPages - halfWay < currentPage) {\n        return totalPages - paginationRange + i;\n      } else if (halfWay < currentPage) {\n        return currentPage - halfWay + i;\n      } else {\n        return i;\n      }\n    } else {\n      return i;\n    }\n  };\n  __decorate$3([Input(), __metadata$2(\"design:type\", String)], PaginationControlsDirective.prototype, \"id\", void 0);\n  __decorate$3([Input(), __metadata$2(\"design:type\", Number)], PaginationControlsDirective.prototype, \"maxSize\", void 0);\n  __decorate$3([Output(), __metadata$2(\"design:type\", EventEmitter)], PaginationControlsDirective.prototype, \"pageChange\", void 0);\n  __decorate$3([Output(), __metadata$2(\"design:type\", EventEmitter)], PaginationControlsDirective.prototype, \"pageBoundsCorrection\", void 0);\n  PaginationControlsDirective = __decorate$3([Directive({\n    selector: 'pagination-template,[pagination-template]',\n    exportAs: 'paginationApi'\n  }), __metadata$2(\"design:paramtypes\", [PaginationService, ChangeDetectorRef])], PaginationControlsDirective);\n  return PaginationControlsDirective;\n}();\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar NgxPaginationModule = /** @class */function () {\n  function NgxPaginationModule() {}\n  NgxPaginationModule = __decorate([NgModule({\n    imports: [CommonModule],\n    declarations: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective],\n    providers: [PaginationService],\n    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\n  })], NgxPaginationModule);\n  return NgxPaginationModule;\n}();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };","map":{"version":3,"names":["ChangeDetectionStrategy","ChangeDetectorRef","Component","Directive","EventEmitter","Input","NgModule","Output","Pipe","ViewEncapsulation","CommonModule","PaginationService","change","instances","DEFAULT_ID","prototype","defaultId","register","instance","id","updateInstance","changed","prop","getCurrentPage","currentPage","setCurrentPage","page","maxPage","Math","ceil","totalItems","itemsPerPage","emit","setTotalItems","setItemsPerPage","getInstance","clone","obj","target","i","hasOwnProperty","__decorate$1","undefined","__decorate","decorators","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","defineProperty","__metadata","k","v","metadata","LARGE_NUMBER","Number","MAX_SAFE_INTEGER","PaginatePipe","service","state","transform","collection","args","Array","_id","slice","serverSideMode","createInstance","start","end","perPage","emitChange","isIdentical","stateIsIdentical","saveState","config","checkConfig","required","missing","filter","Error","join","size","isMetaDataIdentical","every","element","index","name","pure","DEFAULT_TEMPLATE","DEFAULT_STYLES","__decorate$2","__metadata$1","coerceToBoolean","input","PaginationControlsComponent","maxSize","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","pageChange","pageBoundsCorrection","_directionLinks","_autoHide","_responsive","get","set","value","enumerable","configurable","trackByIndex","String","Boolean","selector","template","styles","changeDetection","OnPush","encapsulation","None","__decorate$3","__metadata$2","PaginationControlsDirective","changeDetectorRef","_this","pages","changeSub","subscribe","updatePageLinks","markForCheck","detectChanges","ngOnInit","ngOnChanges","changes","ngOnDestroy","unsubscribe","previous","checkValidId","setCurrent","getCurrent","next","isFirstPage","isLastPage","getLastPage","inst","getTotalItems","console","warn","correctedCurrentPage","outOfBoundCorrection","setTimeout","createPageArray","totalPages","paginationRange","max","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","label","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","push","exportAs","NgxPaginationModule","imports","declarations","providers","exports","ɵb","ɵa"],"sources":["/Users/saleemmalikshaik/Documents/My-Profile/shaik.portfolio.github.io/node_modules/ngx-pagination/dist/ngx-pagination.js"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        var emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([\r\n        Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.prototype.trackByIndex = function (index) {\r\n        return index;\r\n    };\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsComponent = __decorate$2([\r\n        Component({\r\n            selector: 'pagination-controls',\r\n            template: DEFAULT_TEMPLATE,\r\n            styles: [DEFAULT_STYLES],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        })\r\n    ], PaginationControlsComponent);\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        // Return 1 as default page number\r\n        // Make sense to show 1 instead of empty when there are no items\r\n        var totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsDirective = __decorate$3([\r\n        Directive({\r\n            selector: 'pagination-template,[pagination-template]',\r\n            exportAs: 'paginationApi'\r\n        }),\r\n        __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule],\r\n            declarations: [\r\n                PaginatePipe,\r\n                PaginationControlsComponent,\r\n                PaginationControlsDirective\r\n            ],\r\n            providers: [PaginationService],\r\n            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n        })\r\n    ], NgxPaginationModule);\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}